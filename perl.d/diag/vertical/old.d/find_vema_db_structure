#!/usr/bin/perl

use strict;
use warnings;

use BerkeleyDB;

use Data::Dumper;
use Data::MessagePack;

my $vema_db_file="/opt/wotan/home/mamf/opt/var/vertical/vema.db";

my %vema_db_h;

my $vema_db=undef;

$vema_db = new BerkeleyDB::Hash
  -Filename => $vema_db_file,
  -Flags    => DB_CREATE;


tie %vema_db_h, 'BerkeleyDB::Hash', 
  -Filename      => $vema_db_file;

#$vema_db=\%vema_db_h;

&main();

sub main {
  if($ARGV[0]) {

    if($ARGV[0] == 1) {

      foreach my $entry (keys %vema_db_h) {
        my $entry_values=Data::MessagePack->unpack($vema_db_h{$entry});
        if($entry_values->{'d'} == 1) {
          print($entry, "\n");
          return 0;
        }
      }

      return 0;
    }
    if($ARGV[0] == 2) {

      foreach my $entry (keys %vema_db_h) {
        my $entry_values=Data::MessagePack->unpack($vema_db_h{$entry});
        if($entry_values->{'d'} == 2) {
          print($entry, "\n");
          return 0;
        }
      }

      return 0;
    }
    if($ARGV[0] == 3) {

      foreach my $entry (keys %vema_db_h) {
        my $entry_values=Data::MessagePack->unpack($vema_db_h{$entry});
        if($entry_values->{'d'} == 3) {
          print($entry, "\n");
          return 0;
        }
      }

      return 0;
    }
    if($ARGV[0] == 4) {

      foreach my $entry (keys %vema_db_h) {
        my $entry_values=Data::MessagePack->unpack($vema_db_h{$entry});
        if($entry_values->{'d'} == 4) {
          print($entry, "\n");
          return 0;
        }
      }

      return 0;
    }
    if($ARGV[0] == 5) {

      foreach my $entry (keys %vema_db_h) {
        my $entry_values=Data::MessagePack->unpack($vema_db_h{$entry});
        if($entry_values->{'d'} == 5) {
          print($entry, "\n");
          return 0;
        }
      }

      return 0;
    }


    my $input=&process_input;

    if(defined($vema_db_h{$input})) {
      print("Values found for key $input:\n");
      my $output=Data::MessagePack->unpack($vema_db_h{$input});
      print(Dumper $output);
    }
    else { print("No values found for key $input.\n"); }

    return 0;
  }

  print("A total of ", (scalar(keys %vema_db_h)), " entries have been stored.\n");

  return 0;
}

sub process_input {

  my $input=$ARGV[0];

  my $i=1;

  while(defined $ARGV[$i]) {
    $input.=' ';
    $input.=$ARGV[1];
    $i++;
  }

  return $input;
}

sub get_from_db_mp {
  my $db=shift; 
  my $db_key=shift;
  my $packed;
  #This was db_put?...
  #  my $return=$db->db_put($db_key, $packed);
  my $return=$db->db_get($db_key, $packed);
  if($return != 0) {
    #    print "error in db_get: $return\n";
  }
  if(not $packed) {
    return;
  }
  my $value=eval{Data::MessagePack->unpack($packed);};
  my $error=$@;
  if($error) {
#    print "error in unpacking: $error\n";
    return;
  }
  return $value;
}
