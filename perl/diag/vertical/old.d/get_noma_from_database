#!/usr/bin/perl

## enforce strict pragma
use strict;
## warn about possible problem
use warnings;

use lib qw( /home/aupro/ap/perl/lib /home/aupro/usr/lib/perl );

## used modules, in alphabetical order
use BerkeleyDB;
use Data::Dumper;

use AuthorProfile::Common qw ( open_db get_from_db_json close_db );

use Encode;
use utf8;

binmode(STDOUT,"utf8");

my $g_home_dir=$ENV{'HOME'};
my $g_noma_db_file="$g_home_dir/ap/var/noma.db";

if(not -f $g_noma_db_file) { die "noma database $g_noma_db_file does not exist.\n"; }

# Construct the handler-object for the BerkDB that stores the $noma values
my $g_noma_db = new BerkeleyDB::Hash
  -Filename => $g_noma_db_file,
  -Flags    => DB_CREATE
  or die $BerkeleyDB::Error;


my $sid=$ARGV[0];

if(not $sid) { $sid="pkr1"; }

$g_noma_db=&AuthorProfile::Common::open_db($g_noma_db_file);
my $noma_record=&AuthorProfile::Common::get_from_db_json($g_noma_db,$sid);
&AuthorProfile::Common::close_db($g_noma_db);

if($noma_record) { print Dumper $noma_record; }
else {
  my %h_noma_db;
  tie %h_noma_db, 'BerkeleyDB::Hash',
    -Filename => $g_noma_db_file,
      -Flags    => DB_CREATE
        or die $BerkeleyDB::Error;

  if(not keys %h_noma_db) { print "no values stored in the noma database\n"; }
  else { print keys %h_noma_db; }
}
