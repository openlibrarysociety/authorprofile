<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="1.0" 
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ap="http://authorprofile.org"
                xmlns:amf="http://amf.openlib.org"
                exclude-result-prefixes="amf #default ap">
  <xsl:output method="xml" 
              indent="yes" 
              omit-xml-declaration="yes"/>
  <xsl:include href="common.xslt.xml"/>
  <!-- a parameter passed by the caller, giving the aunex -->
  <xsl:param name="aunex"/>
  <!-- title of the page -->
  <xsl:template name="aunex_title">    
    <xsl:text>Papers written by people called “</xsl:text>
    <xsl:value-of select="$aunex"/>
    <xsl:text>”</xsl:text>
  </xsl:template>
  <xsl:template name="aunex_body">
    <!-- <pre> -->
    <!--  <xsl:copy-of select="/"/>  -->
    <!--</pre> -->
    <!-- defined in common -->
    <div class="vd">
      <xsl:if test="/amf:amf/ap:vertical">
        <xsl:call-template name="vertical"/>
      </xsl:if>
    </div>
    <!-- 01/23/12 James -->
    <div class="hd">
      <xsl:if test="/amf:amf/ap:horizontal">
        <xsl:call-template name="horizontal"/>
      </xsl:if>
    </div>
    <h1>
      <xsl:call-template name="aunex_title"/>
    </h1>
    <!-- this template is specific to each page type -->
    <xsl:for-each select="//amf:text">
      <!-- defined in common -->
      <xsl:call-template name="text">
        <xsl:with-param name="in"
                        select="."/>
        <xsl:with-param name="is_aunex">
          <xsl:text>aunex</xsl:text>
        </xsl:with-param>
      </xsl:call-template>
    </xsl:for-each>
  </xsl:template>
  <!-- vertical data -->
  <xsl:template name="vertical">
    <!--link to the author-->
    <a class="utav">
      <xsl:attribute name="href">
        <xsl:value-of select="$author_url_start"/>
        <xsl:value-of select="/amf:amf/ap:vertical/@author"/>
        <xsl:text>.html</xsl:text>
      </xsl:attribute>
      <xsl:value-of select="/amf:amf/ap:vertical/@name"/>
    </a>
    <xsl:for-each select="/amf:amf/ap:vertical/ap:aunex">
      <xsl:text> &gt; </xsl:text>
      <xsl:choose>
        <!-- the last aunex -->
        <xsl:when test="position()=last()">
          <q class="utouv">
            <xsl:value-of select="translate(@name,' ',' ')"/>
          </q>
        </xsl:when>
        <xsl:otherwise>
          <!-- intermediate aunexes-->
          <q>
            <a class="utuv">
              <xsl:attribute name="href">
                <xsl:value-of select="$aunex_url_start"/>
                <xsl:value-of select="@name"/>
              </xsl:attribute>
              <xsl:value-of select="translate(@name,' ',' ')"/>
          </a>
          </q>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:for-each>
  </xsl:template>
  <!-- 01/23/12 James -->
  <!-- horizontal data -->
  <xsl:template name="horizontal">
    <xsl:text>Author-namestrings (aunexes) similar to “</xsl:text>
    <xsl:value-of select="$aunex"/>
    <xsl:text>”:</xsl:text>
    <xsl:for-each select="/amf:amf/ap:horizontal/ap:horizontalAunex">
    <xsl:text> “</xsl:text>
      <a class="utuv">
        <xsl:attribute name="href">
          <xsl:value-of select="$aunex_url_start"/>
          <xsl:value-of select="text()"/>
        </xsl:attribute>
        <xsl:value-of select="translate(text(),' ',' ')"/>
      </a>
      <xsl:text>”</xsl:text>
    </xsl:for-each>
  </xsl:template>  
  <!-- called by page template in common  -->
  <xsl:template match="/">
    <xsl:call-template name="page">
      <xsl:with-param name="title">
        <xsl:call-template name="aunex_title"/>
      </xsl:with-param>
      <xsl:with-param name="main_body">
        <xsl:call-template name="aunex_body"/>
      </xsl:with-param>
    </xsl:call-template>
  </xsl:template>
</xsl:stylesheet>